package mapper

// Basic imports
import (
	"encoding/json"
	"testing"

	"github.com/ernestio/definition-mapper/libmapper/providers/azure/components"
	"github.com/stretchr/testify/suite"
)

// MapperTestSuite : Test suite for ebs component
type MapperTestSuite struct {
	suite.Suite
	VariableThatShouldStartAtFive int
	Mapper                        Mapper
}

// SetupTest : Setup test suite
func (suite *MapperTestSuite) SetupTest() {
}

// TestDecodeEmbededStructures : Testing decoding embeded structures
func (suite *MapperTestSuite) TestDecodeEmbededStructures() {
	input := getFakeVMBody()
	g, err := suite.Mapper.LoadGraph(input)
	suite.Equal(err, nil)
	suite.NotEqual(g, nil)
	suite.Equal(len(g.Components), 8)
	suite.Equal("credentials", g.Components[0].GetType())
	suite.Equal("resource_group", g.Components[1].GetType())
	suite.Equal("virtual_network", g.Components[2].GetType())
	suite.Equal("sql_server", g.Components[3].GetType())
	suite.Equal("storage_account", g.Components[4].GetType())
	suite.Equal("subnet", g.Components[5].GetType())
	suite.Equal("storage_container", g.Components[6].GetType())
	suite.Equal("network_interface", g.Components[7].GetType())

	a := g.Components[2].(*components.VirtualNetwork)
	suite.Equal("eastus", a.Location)
	suite.Equal("vn_test", a.Name)
}

// TestMaperTestSuite : tests for ebs component
func TestMapperTestSuite(t *testing.T) {
	suite.Run(t, new(MapperTestSuite))
}

func getFakeVMBody() (gm map[string]interface{}) {
	input := []byte(`{"id":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","action":"service.create","components":[{"_action":"none","_component":"credentials","_component_id":"credentials::azure","_provider":"azure","_state":"waiting","azure_client_id":"cliid","azure_client_secret":"secret","azure_environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","azure_subscription_id":"bla","azure_tenant_id":"tenid","name":"demo13","region":"westus"},{"_action":"create","_component":"resource_group","_component_id":"resource_group::rg1","_provider":"azure","_state":"completed","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1","location":"eastus","name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"rg1","ernest.service":"demo80"}},{"_action":"create","_component":"virtual_network","_component_id":"virtual_network::vn_test","_provider":"azure","_state":"completed","address_space":["10.0.0.0/16"],"azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"dns_server_names":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vn_test","location":"eastus","name":"vn_test","resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","subnets":[{"address_prefix":"10.0.1.0/24","name":"sub_test","security_group":""}],"tags":null},{"_action":"create","_component":"sql_server","_component_id":"sql_server::ernestserver01","_provider":"azure","_state":"completed","administrator_login":"mradministrator","administrator_login_password":"P4ssw0rd","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","fully_qualified_domain_name":"","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Sql/servers/ernestserver01","location":"eastus","name":"ernestserver01","resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"ernestserver01","ernest.service":"demo80"},"version":"12.0"},{"_action":"create","_component":"storage_account","_component_id":"storage_account::safest12354","_provider":"azure","_state":"completed","account_kind":"","account_type":"Standard_LRS","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"enable_blob_encryption":false,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/safest12354","location":"eastus","name":"safest12354","primary_access_key":"","primary_blob_endpoint":"","primary_file_endpoint":"","primary_location":"","primary_queue_endpoint":"","primary_table_endpoint":"","resource_group_name":"rg1","secondary_access_key":"","secondary_blob_endpoint":"","secondary_location":"","secondary_queue_endpoint":"","secondary_table_endpoint":"","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"safest12354","ernest.service":"demo80"}},{"_action":"create","_component":"subnet","_component_id":"subnet::sub_test","_provider":"azure","_state":"completed","address_prefix":"10.0.1.0/24","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vn_test/subnets/sub_test","ip_configurations":null,"name":"sub_test","network_security_group_id":"","resource_group_name":"rg1","route_table_id":"","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","virtual_network_name":"vn_test"},{"_action":"create","_component":"storage_container","_component_id":"storage_container::scfestla","_provider":"azure","_state":"completed","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"container_access_type":"private","environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"scfestla","name":"scfestla","properties":null,"resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","storage_account_name":"safest12354"},{"_action":"create","_component":"network_interface","_component_id":"network_interface::ni_test","_provider":"azure","_state":"completed","applied_dns_servers":null,"azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"dns_servers":null,"enable_ip_forwarding":false,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/ni_test","internal_dns_name_label":"","internal_fqdn":"","ip_configuration":[{"load_balancer_backend_address_pools_ids":null,"load_balancer_inbound_nat_rules_ids":null,"name":"config_1","private_ip_address":"","private_ip_address_allocation":"dynamic","public_ip_address_id":"","subnet_id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vn_test/subnets/sub_test"}],"location":"eastus","mac_address":"","name":"ni_test","network_security_group_id":"","private_ip_address":"","resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"ni_test","ernest.service":"demo80"},"virtual_machine_id":""}],"changes":[{"_action":"create","_component":"resource_group","_component_id":"resource_group::rg1","_provider":"azure","_state":"completed","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1","location":"eastus","name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"rg1","ernest.service":"demo80"}},{"_action":"create","_component":"virtual_network","_component_id":"virtual_network::vn_test","_provider":"azure","_state":"completed","address_space":["10.0.0.0/16"],"azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"dns_server_names":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vn_test","location":"eastus","name":"vn_test","resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","subnets":[{"address_prefix":"10.0.1.0/24","name":"sub_test","security_group":""}],"tags":null},{"_action":"create","_component":"virtual_machine","_component_id":"virtual_machine::vm_test-1","_provider":"azure","_state":"errored","availability_set_id":"","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"delete_data_disks_on_termination":false,"delete_os_disk_on_termination":false,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","error":"Error creating the requested resource : compute.VirtualMachinesClient#CreateOrUpdate: Failure responding to request: StatusCode=400 -- Original Error: autorest/azure: Service returned an error. Status=400 Code=\"InvalidParameter\" Message=\"A disk named 'myosdiska' already exists.\"","id":"","license_type":"","location":"eastus","name":"vm_test-1","network_interface_ids":["/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/ni_test"],"network_interfaces":["ni_test"],"os_profile":{"admin_password":"Password1234!","admin_username":"","computer_name":"","custom_data":""},"os_profile_linux_config":{"disable_password_authentication":false,"ssh_keys":[{"key_data":"aoudhfoiaudhfalduihf","path":"default"}]},"os_profile_secrets":null,"os_profile_windows_config":{"additional_unattend_config":[{"component":"","content":"","pass":"","setting_name":""}],"enable_automatic_upgrades":false,"provision_vm_agent":false,"winrm":null},"plan":{"name":"","product":"","publisher":""},"resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","storage_data_disk":{"create_option":"empty","disk_size_gb":1023,"lun":0,"name":"myosdiska","vhd_uri":"https://safest12354.blob.core.windows.net/safestla/myosdiska.vhd"},"storage_image_reference":{"offer":"UbuntuServer","publisher":"Canonical","sku":"14.04.2-LTS","version":"latest"},"storage_os_disk":{"caching":"","create_option":"FromImage","image_uri":"","name":"myosdiska","os_type":"","vhd_uri":"https://safest12354.blob.core.windows.net/safestla/myosdiska.vhd"},"tags":null,"vm_size":"Standard_A0"},{"_action":"create","_component":"subnet","_component_id":"subnet::sub_test","_provider":"azure","_state":"completed","address_prefix":"10.0.1.0/24","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vn_test/subnets/sub_test","ip_configurations":null,"name":"sub_test","network_security_group_id":"","resource_group_name":"rg1","route_table_id":"","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","virtual_network_name":"vn_test"},{"_action":"create","_component":"network_interface","_component_id":"network_interface::ni_test","_provider":"azure","_state":"completed","applied_dns_servers":null,"azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"dns_servers":null,"enable_ip_forwarding":false,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/networkInterfaces/ni_test","internal_dns_name_label":"","internal_fqdn":"","ip_configuration":[{"load_balancer_backend_address_pools_ids":null,"load_balancer_inbound_nat_rules_ids":null,"name":"config_1","private_ip_address":"","private_ip_address_allocation":"dynamic","public_ip_address_id":"","subnet_id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/vn_test/subnets/sub_test"}],"location":"eastus","mac_address":"","name":"ni_test","network_security_group_id":"","private_ip_address":"","resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"ni_test","ernest.service":"demo80"},"virtual_machine_id":""},{"_action":"create","_component":"sql_server","_component_id":"sql_server::ernestserver01","_provider":"azure","_state":"completed","administrator_login":"mradministrator","administrator_login_password":"P4ssw0rd","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","fully_qualified_domain_name":"","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Sql/servers/ernestserver01","location":"eastus","name":"ernestserver01","resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"ernestserver01","ernest.service":"demo80"},"version":"12.0"},{"_action":"create","_component":"storage_account","_component_id":"storage_account::safest12354","_provider":"azure","_state":"completed","account_kind":"","account_type":"Standard_LRS","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"enable_blob_encryption":false,"environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"/subscriptions/ab37259d-b5cf-4061-9241-95ac9c6fee1d/resourceGroups/rg1/providers/Microsoft.Storage/storageAccounts/safest12354","location":"eastus","name":"safest12354","primary_access_key":"","primary_blob_endpoint":"","primary_file_endpoint":"","primary_location":"","primary_queue_endpoint":"","primary_table_endpoint":"","resource_group_name":"rg1","secondary_access_key":"","secondary_blob_endpoint":"","secondary_location":"","secondary_queue_endpoint":"","secondary_table_endpoint":"","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","tags":{"Name":"safest12354","ernest.service":"demo80"}},{"_action":"create","_component":"storage_container","_component_id":"storage_container::scfestla","_provider":"azure","_state":"completed","azure_client_id":"cliid","azure_client_secret":"secret","azure_subscription_id":"bla","azure_tenant_id":"tenid","components":null,"container_access_type":"private","environment":"F3Q2CWwz1qW9j8u+pYzb5XoXOLrVpVYfDNvUMDx7","id":"scfestla","name":"scfestla","properties":null,"resource_group_name":"rg1","service":"daa04430-ad9e-4a63-6a82-d20f4c08cc39-276e922ee972ad9a60c5ead71989af43","storage_account_name":"safest12354"}],"edges":[{"destination":"virtual_network::vn_test","length":1,"source":"resource_group::rg1"},{"destination":"virtual_machine::vm_test-1","length":1,"source":"network_interface::ni_test"},{"destination":"subnet::sub_test","length":1,"source":"virtual_network::vn_test"},{"destination":"network_interface::ni_test","length":1,"source":"subnet::sub_test"},{"destination":"sql_server::ernestserver01","length":1,"source":"resource_group::rg1"},{"destination":"storage_account::safest12354","length":1,"source":"resource_group::rg1"},{"destination":"storage_container::scfestla","length":1,"source":"storage_account::safest12354"},{"destination":"resource_group::rg1","length":1,"source":"start"},{"destination":"end","length":1,"source":"virtual_machine::vm_test-1"},{"destination":"end","length":1,"source":"sql_server::ernestserver01"},{"destination":"end","length":1,"source":"storage_container::scfestla"}]}`)

	err := json.Unmarshal(input, &gm)
	if err != nil {
		panic(err)
	}
	return
}
